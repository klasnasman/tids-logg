/*
ORPHAN LAYOUT:
A responsive grid layout that automatically 
centers orphaned items within a 6-column grid.

┌─────────────────────────────────────────┐
│ Standard 3-item row:                    │
│ ┌─────┬─────┬─────┬─────┬─────┬─────┐   │
│ │  1  │  1  │  2  │  2  │  3  │  3  │   │
│ └─────┴─────┴─────┴─────┴─────┴─────┘   │
│                                         │
│ Last row always centered:               │
│ ┌─────┬─────┬─────┬─────┬─────┬─────┐   │
│ │  1  │  1  │  2  │  2  │  3  │  3  │   │
│ ├─────┼─────┼─────┼─────┼─────┼─────┤   │
│ │     │     │  4  │  4  │     │     │   │
│ └─────┴─────┴─────┴─────┴─────┴─────┘   │
│ ┌─────┬─────┬─────┬─────┬─────┬─────┐   │
│ │  1  │  1  │  2  │  2  │  3  │  3  │   │
│ ├─────┼─────┼─────┼─────┼─────┼─────┤   │
│ │     │  4  │  4  │  5  │  5  │     │   │
│ └─────┴─────┴─────┴─────┴─────┴─────┘   │
└─────────────────────────────────────────┘
*/
@layer utilities {
  .orphan {
    --gap: 4rem;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: var(--gap);
  }

  .orphan > * {
    grid-column: span 2;
  }

  .orphan > *:nth-child(3n+1):last-child {
    grid-column: 3 / span 2;
  }
  
  .orphan > *:nth-child(3n+1):nth-last-child(2) {
    grid-column: 2 / span 2;
  }

  .orphan > *:nth-child(3n+2):last-child {
    grid-column: 4 / span 2;
  }

  @media screen and (max-width: 1025px) {
    .orphan {
      grid-template-columns: repeat(2, 1fr);
    }

    .orphan > * {
      grid-column: span 1;
    }

    .orphan > *:nth-child(2n+1):last-child {
      grid-column: 1 / span 2;
    }
    
    .orphan > *:nth-child(3n+1):last-child,
    .orphan > *:nth-child(3n+1):nth-last-child(2),
    .orphan > *:nth-child(3n+2):last-child {
      grid-column: auto;
    }
    
    .orphan > *:nth-child(2n+1):last-child {
      grid-column: 1 / span 2;
    }
  }

  @media screen and (max-width: 767px) {
    .orphan {
      grid-template-columns: 1fr;
    }

    .orphan > * {
      grid-column: 1 / -1;
    }

    .orphan > *:nth-child(3n+1):last-child,
    .orphan > *:nth-child(3n+1):nth-last-child(2),
    .orphan > *:nth-child(3n+2):last-child,
    .orphan > *:nth-child(2n+1):last-child {
      grid-column: 1 / -1;
    }
  }
}