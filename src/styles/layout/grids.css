/* 
GRIDS:
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gap-base: This defines the space between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
@layer utilities {
  .grids {
    --grid-min-item-size: 14rem;
    --grid-placement: auto-fill;
    --grid-gap: 1rem;
    display: grid;
    grid-template-columns: repeat(var(--grid-placement, auto-fill), minmax(var(--grid-min-item-size, 14rem), 1fr));
    gap: var(--grid-gap);
  }

  /* A split 50/50 layout */
  .grids[data-50-50] {
    --grid-placement: auto-fit;
    --grid-min-item-size: clamp(16rem, 50vw, 33rem);
  }

  /* Three column grid layout */
  .grids[data-thirds] {
    --grid-placement: auto-fit;
    --grid-min-item-size: clamp(16rem, 33%, 20rem);
  }

  .grids[data-gap-lg] {
    --grid-gap: 2rem;
  }
}
